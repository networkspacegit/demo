 git clone git://github.com/networkspacegit/demo.git

git config --list

git clone http://x.com/mytest.git "d:\mygit2"
/*
结果：
会直接将远程文件克隆在指定文件夹下
完整路径 d:\mygit2\...(文件)
*/

git remote add origin git://github.com/networkspacegit/demo.git 


git clone -b branch_name http://x.com/mytest.git
/*
结果：
会在当前文件夹下生成 mytest 默认文件夹
完整路径 d:\mygit\mytest\...(文件)
*/

git remote add origin git@github.com:networkspacegit/demo.git

git清空一个仓库
克隆到本地
本地删除它
然后push到远端
 

git clone
cd 它
git rm -rf *
git commit -m “修改一下”
git push -u origin master
git push origin master

git remote rm origin
git remote add origin git@github.com:networkspacegit/demo.git

看网上很多人说是因为本地仓库的文件和远程仓库不一样，所以要先用命令git pull -f origin master将远程仓库的文件拉到本地：


可是这样做之后再git push还是没有用，还是报同样的错误。
于是我就用git push -f origin master强制push就成功了。（注意：大家千万不要随便用-f的操作，因为f意味着强制push，会覆盖掉远程的所有代码！）



客户端生成ssh key
ssh-keygen -t rsa -C "youremail@example.com"

C:\Users\shunrong.meng\.ssh
https://www.jianshu.com/p/7d57ce4147d3
https://blog.csdn.net/qq_25701293/article/details/98109813  设置密匙权限


1.将需要需要操作的远程仓库的分支pull下来

git pull origin 分支名（master/自己创建的分支）例如：git pull origin master

2.查看当前分支的文件和文件夹

dir
2. 删除远程文件和本地文件

a）删除远程文件 （假设当前分支为master分支）：

git rm <filename>
b）删除远程文件夹 （假设当前分支为master分支）：

git rm -r <directoryname>   git rm -r D:\Users\shunrong.meng\Desktop\git\demo
git commit -m "<commit message>"
git push -u origin master



有如下3种解决方法：

1.使用强制push的方法：
git push -u origin master -f
这样会使远程修改丢失，一般是不可取的，尤其是多人协作开发的时候。

2.push前先将远程repository修改pull下来
git pull origin master
git push -u origin master

3.若不想merge远程和本地修改，可以先创建新的分支：
git branch [name]
然后push
git push -u origin [name]